{"version":3,"sources":["fresh-tab/tests/app.jshint.js","fresh-tab/tests/components/article-item.jshint.js","fresh-tab/tests/components/article-items.jshint.js","fresh-tab/tests/components/speed-dial.jshint.js","fresh-tab/tests/components/speed-dials.jshint.js","fresh-tab/tests/components/url-bar.jshint.js","fresh-tab/tests/helpers/destroy-app.js","fresh-tab/tests/helpers/destroy-app.jshint.js","fresh-tab/tests/helpers/ember-i18n/test-helpers.js","fresh-tab/tests/helpers/equal.jshint.js","fresh-tab/tests/helpers/module-for-acceptance.js","fresh-tab/tests/helpers/module-for-acceptance.jshint.js","fresh-tab/tests/helpers/resolver.js","fresh-tab/tests/helpers/resolver.jshint.js","fresh-tab/tests/helpers/start-app.js","fresh-tab/tests/helpers/start-app.jshint.js","fresh-tab/tests/locales/de/translations.jshint.js","fresh-tab/tests/locales/en/config.jshint.js","fresh-tab/tests/locales/en/translations.jshint.js","fresh-tab/tests/models/news.jshint.js","fresh-tab/tests/resolver.jshint.js","fresh-tab/tests/router.jshint.js","fresh-tab/tests/routes/application.jshint.js","fresh-tab/tests/routes/index.jshint.js","fresh-tab/tests/services/cliqz.jshint.js","fresh-tab/tests/test-helper.js","fresh-tab/tests/test-helper.jshint.js","fresh-tab/tests/unit/services/cliqz-test.js","fresh-tab/tests/unit/services/cliqz-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('fresh-tab/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/components/article-item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/article-item.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/article-item.js should pass jshint.\\ncomponents/article-item.js: line 20, col 14, \\'ev\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('fresh-tab/tests/components/article-items.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/article-items.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/article-items.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/components/speed-dial.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/speed-dial.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/speed-dial.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/components/speed-dials.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/speed-dials.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/speed-dials.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/components/url-bar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/url-bar.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/url-bar.js should pass jshint.\\ncomponents/url-bar.js: line 12, col 30, Missing semicolon.\\ncomponents/url-bar.js: line 13, col 7, Missing semicolon.\\n\\n2 errors');\n  });\n});","define('fresh-tab/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('fresh-tab/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/destroy-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('fresh-tab/tests/helpers/equal.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/equal.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/equal.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'fresh-tab/tests/helpers/start-app', 'fresh-tab/tests/helpers/destroy-app'], function (exports, _qunit, _freshTabTestsHelpersStartApp, _freshTabTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _freshTabTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _freshTabTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('fresh-tab/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/module-for-acceptance.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/helpers/resolver', ['exports', 'fresh-tab/resolver', 'fresh-tab/config/environment'], function (exports, _freshTabResolver, _freshTabConfigEnvironment) {\n\n  var resolver = _freshTabResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _freshTabConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _freshTabConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('fresh-tab/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/helpers/start-app', ['exports', 'ember', 'fresh-tab/app', 'fresh-tab/config/environment'], function (exports, _ember, _freshTabApp, _freshTabConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _freshTabConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _freshTabApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('fresh-tab/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/locales/de/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/de');\n  QUnit.test('locales/de/translations.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/de/translations.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/locales/en/config.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en');\n  QUnit.test('locales/en/config.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/config.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/locales/en/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en');\n  QUnit.test('locales/en/translations.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/translations.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/models/news.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/news.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/news.js should pass jshint.\\nmodels/news.js: line 7, col 3, Missing semicolon.\\n\\n1 error');\n  });\n});","define('fresh-tab/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/application.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/services/cliqz.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services');\n  QUnit.test('services/cliqz.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/cliqz.js should pass jshint.\\nservices/cliqz.js: line 75, col 14, Missing semicolon.\\nservices/cliqz.js: line 87, col 14, Missing semicolon.\\nservices/cliqz.js: line 101, col 14, Missing semicolon.\\nservices/cliqz.js: line 27, col 23, \\'Promise\\' is not defined.\\nservices/cliqz.js: line 79, col 23, \\'Promise\\' is not defined.\\nservices/cliqz.js: line 93, col 23, \\'Promise\\' is not defined.\\n\\n6 errors');\n  });\n});","define('fresh-tab/tests/test-helper', ['exports', 'fresh-tab/tests/helpers/resolver', 'ember-qunit'], function (exports, _freshTabTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_freshTabTestsHelpersResolver['default']);\n});","define('fresh-tab/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('fresh-tab/tests/unit/services/cliqz-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:cliqz', 'Unit | Service | cliqz', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('fresh-tab/tests/unit/services/cliqz-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/services');\n  QUnit.test('unit/services/cliqz-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/cliqz-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('fresh-tab/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}