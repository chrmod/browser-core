<?xml version="1.0"?>
<bindings id="cliqzBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="autocomplete-rich-result-popup-cliqz" extends="chrome://global/content/bindings/autocomplete.xml#autocomplete-rich-result-popup" >
    <content ignorekeys="true" level="top" consumeoutsideclicks="false" minheight="100" maxheight="420" >
      <div xmlns="http://www.w3.org/1999/xhtml" anonid="cliqz-html-container"></div>
    </content>

    <implementation >
       <constructor>
        <![CDATA[
          this.cliqzBox = document.getAnonymousElementByAttribute(this, "anonid", "cliqz-html-container");
          CLIQZ.UI.main(this.cliqzBox);
        ]]>
      </constructor>
      <property name="selectedIndex"
                onget="return 0;">
        <setter>
          <![CDATA[
            //cliqz shadowing
          ]]>
        </setter>
      </property>
      <method name="_invalidate">
        <body>
          <![CDATA[
            this._appendCurrentResult();
          ]]>
        </body>
      </method>
      <method name="_openAutocompletePopup">
        <parameter name="aInput"/>
        <parameter name="aElement"/>
        <body>
          <![CDATA[
          if (!this.mPopupOpen) {
            this.mInput = aInput;
            this._invalidate();

            CLIQZ.Core.popupEvent(true);

            var width = aElement.getBoundingClientRect().width;
            this.setAttribute("width", width > 100 ? width : 100);
            this.openPopup(aElement, "after_start", 0, 0, false, true);
          }
        ]]>
        </body>
      </method>

      <method name="_appendCurrentResult">
        <body>
          <![CDATA[
            function unEscapeUrl(url){
              return Components.classes['@mozilla.org/intl/texttosuburi;1'].
                        getService(Components.interfaces.nsITextToSubURI).
                        unEscapeURIForUI('UTF-8', url)
            }

            var data = [],
                ctrl = this.mInput.controller,
                q = ctrl.searchString.replace(/^\s+/, '').replace(/\s+$/, ''),
                lastRes = CliqzAutocomplete.lastResult;

            if(this._matchCount > 0){
              for(var i=0; i<this._matchCount; i++) {
                  data.push({
                    title: ctrl.getCommentAt(i),
                    url: unEscapeUrl(ctrl.getValueAt(i)),
                    type: ctrl.getStyleAt(i),
                    text: q,
                    data: lastRes && lastRes.getDataAt(i),
                  });
              }

              CLIQZ.UI.results({
                q: q,
                results: data,
                width: CLIQZ.Core.urlbar.clientWidth - 100
              });
              CLIQZ.UI.suggestions(CliqzAutocomplete.lastSuggestions, q);
              CLIQZ.Core.autocompleteQuery(data[0].url);
            }
          ]]>
        </body>
      </method>
    </implementation>
  </binding>
</bindings>
