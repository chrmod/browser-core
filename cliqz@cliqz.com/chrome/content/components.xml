<?xml version="1.0"?>
<bindings id="cliqzBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="autocomplete-rich-result-popup-cliqz" extends="chrome://global/content/bindings/autocomplete.xml#autocomplete-rich-result-popup">
    <content ignorekeys="true" level="top" consumeoutsideclicks="false" minheight="100" maxheight="420">
    </content>

    <implementation >
       <constructor>
        <![CDATA[
          CLIQZ.UI.main(this);
          //CLIQZ.Components.cliqzCreateSearchOptionsItem(engines, text);
        ]]>
      </constructor>
      <property name="selectedIndex"
                onget="return 0;">
        <setter>
          <![CDATA[

        ]]>
        </setter>
      </property>
      <method name="_invalidate">
        <body>
          <![CDATA[
          this._currentIndex = 0;
          this._appendCurrentResult();
        ]]>
        </body>
      </method>
      <method name="_openAutocompletePopup">
        <parameter name="aInput"/>
        <parameter name="aElement"/>
        <body>
          <![CDATA[
          if (!this.mPopupOpen) {
            this.mInput = aInput;
            // clear any previous selection, see bugs 400671 and 488357

            var width = aElement.getBoundingClientRect().width;
            this.setAttribute("width", width > 100 ? width : 100);
            // invalidate() depends on the width attribute
            this._invalidate();

            // CLIQZ START

            CLIQZ.Core.popupEvent(true);

            this.openPopup(aElement, "after_start", 0, 0, false, true);
            //this.moveTo(window.screenX + 35, window.screenY + 88);

            // THIS IS NOT WORKING :(
            //this.sizeTo(window.outerWidth,500)

            // CLIQZ END
          }
        ]]>
        </body>
      </method>

      <method name="_appendCurrentResult">
        <body>
          <![CDATA[


            function unEscapeUrl(url){
              return Components.classes['@mozilla.org/intl/texttosuburi;1'].
                        getService(Components.interfaces.nsITextToSubURI).
                        unEscapeURIForUI('UTF-8', url)
            }


            var data = [],
                ctrl = this.mInput.controller,
                q = ctrl.searchString.replace(/^\s+/, '').replace(/\s+$/, '')

            for(var i=0; i<this._matchCount; i++) {
                data.push({
                  title: ctrl.getCommentAt(i),
                  url: unEscapeUrl(ctrl.getValueAt(i)),
                  type: ctrl.getStyleAt(i),
                  text: q
                  //data: CliqzAutocomplete.lastResult.getDataAt(i),
                });
            }
            CLIQZ.UI.results({
              results: data,
              width: (CLIQZ.Core.popup.width - 85) + 'px'
            });
            CLIQZ.UI.suggestions(CliqzAutocomplete.lastSuggestions);
            console.log(this.innerHTML);
            //CLIQZ.Components._appendCurrentResult(this);
          ]]>
        </body>
      </method>
    </implementation>
  </binding>
</bindings>
