#!/usr/bin/env python
# -*- coding: utf-8 -*-

'''
Generate the logo CSS file for each logo image in the CDN. Each file will
result in a CSS class like this:

.logo-domain-com {
    background-image: url(http://cdnlogos.cliqz.com/domain.com.png);
}
'''

import sys
import boto
import tldextract
import logging
logging.basicConfig()


def printcss(filename):
    domain = filename.replace(".png", "")
    domain_nodots = domain.replace(".", "-")

    print ".logo-" + domain_nodots + " {"
    print "\tbackground-image: url(http://cdnlogos.cliqz.com/" + \
        filename + ");"
    print "}"


def main(argv):
    c = boto.connect_s3()
    bucket = c.get_bucket('cdnlogos')

    print "/* This file is automatically generated by the getLogoCSS.py script. */"
    print

    # for each image decide if it in these categories:
    # 1) domain.tld
    domains_dt = []
    # 2) domain
    domains_d = []
    # 3) subdomain.domain.tld
    domains_sdt = []
    # 4) subdomain.domain
    domains_sd = []

    for key in bucket.list():
        filename = key.name
        full_domain = filename.replace(".png", "")

        parts = tldextract.extract(full_domain)
        tld = parts.tld
        domain = parts.domain
        subdomain = parts.subdomain

        # special rule for google is because officially google has applied for
        # its own tld. We don't want to match that.
        if tld == "google":
            subdomain = domain
            domain = tld
            tld = None

        if not subdomain and tld:
            domains_dt.append(filename)
        elif not subdomain and not tld:
            domains_d.append(filename)
        elif subdomain and tld:
            domains_sdt.append(filename)
        elif subdomain and not tld:
            domains_sd.append(filename)
        else:
            sys.stderr.write("ERROR: no category for " + domain + "\n")

    # Then output them in order of least priority to highest
    # CSS will use the order to settle overlapping classes,
    # those at the later of the file have precddence over those earlier.

    print "\n/* domain */"
    for d in domains_d:
        printcss(d)

    print "\n/* domain.tld */"
    for d in domains_dt:
        printcss(d)

    print "\n/* sub.domain */"
    for d in domains_sd:
        printcss(d)

    print "\n/* sub.domain.tld */"
    for d in domains_sdt:
        printcss(d)




if __name__ == "__main__":
    main(sys.argv)
