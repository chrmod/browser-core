<h2>Release lifecycle</h2>
Release channels:
<ul>
  <li>beta - rolling stage, built from upstream master</li>
  <li>pre-release - rolling stage, replaced with release once stable</li>
  <li>release - versioned, built from tags</li>
</ul>

Extension release process description:
<ul>
  <li>Each release version is planned using bugtracker tickets.</li>
  <li>Work is split into release sprints, each having a release date and more or less
  fixed list of tickets.</li>
  <li>Each release sprint starts with increasing version number.</li>
  <li>During release sprint features and bugfixes land in beta channel.</li>
  <li>Once all tickets are closed, a feature freeze is started - that means, repository
  upstream master is forked to release branch on which we start stabilization.</li>
  <li>Release branch gets built into pre-release build with every bugfix landing in
  the branch.</li>
  <li>Quality control team test pre-release for regressions and all tickets included
  in given release. That results in new "bug" tickets added to bugtracker.</li>
  <li>Quality control iterate over release branch until all know bugs are fixed or
  assigned to next release.</li>
  <li>Stabilization is finished once there are not more tickets left in bugtracker.</li>
  <li>Once stabilization is finished, a tag is put release branch and release builds
  are created.</li>
  <li>Release builds are sent for AMO review. Fixes get applied resulting in new
  builds.</li>
  <li>Once accepted by AMO reviewers, release tag is being open-sourced.</li>
</ul>

Released AMO versions are base for CLIQZ browser releases. Which have to be
independently stabilized.

