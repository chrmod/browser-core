- hosts: nonwin
  gather_facts: no
  vars:
    mock_api_host: 192.168.33.22
  tasks:
    - lineinfile: dest="{{ hosts_file | default('/etc/hosts') }}" line="{{ item }}" state=present
      with_items:
        - "{{ mock_api_host }}    webbeta.cliqz.com"
        - "{{ mock_api_host }}    logging.cliqz.com"
        - "{{ mock_api_host }}    www.google.com"


- hosts: linux
  gather_facts: no
  vars_files:
    - firefox-versions.yaml
  tasks:
    - apt: update_cache=yes
    - apt: pkg={{ item }}
      with_items:
        - wget
        - curl
        - python-pip
        - build-essential
        - g++
        - python-dev

    - pip: name=flask
    - pip: name=mozmill

    - include: http-server.yaml
      service_name: cliqz-ssl-backend
      port: 443

    - include: http-server.yaml
      service_name: cliqz-backend
      port: 80

    - file: state=directory dest={{ item }} mode=0744 owner=vagrant group=vagrant
      with_items:
        - /opt/browsers/firefox
        - /opt/browsers/firefox-releases

    - name: Download releases
      get_url: url="https://ftp.mozilla.org/pub/mozilla.org/firefox/releases/{{ item }}/linux-x86_64/de/firefox-{{ item }}.tar.bz2"
               dest="/opt/browsers/firefox-releases/{{ item }}.tar.bz2"
               owner=vagrant group=vagrant validate_certs=no
      with_items: firefox_versions["releases"]

    - name: Create target directories for extracting releases
      file: state=directory dest="/opt/browsers/firefox/{{ item }}" mode=0744 owner=vagrant group=vagrant
      with_items: firefox_versions["releases"]

    - name: Extract releases
      command: tar xf ../firefox-releases/{{ item }}.tar.bz2 --strip-components 1 -C {{ item }}
               chdir=/opt/browsers/firefox/
               creates=/opt/browsers/firefox/{{ item }}/firefox
      with_items: firefox_versions["releases"]


- hosts: osx
  gather_facts: no
  vars_files:
    - firefox-versions.yaml
  tasks:
    - command: easy_install pip
    - pip: name=mozmill executable=/usr/local/bin/pip

    - file: state=directory dest={{ item }} mode=0744 owner=vagrant
      with_items:
        - /opt/browsers/firefox
        - /opt/browsers/firefox-releases

    - name: Download releases
      get_url: url="https://ftp.mozilla.org/pub/mozilla.org/firefox/releases/{{ item }}/mac/de/Firefox%20{{ item }}.dmg"
               dest="/opt/browsers/firefox-releases/{{ item }}.dmg"
               owner=vagrant
               validate_certs=no
      with_items: firefox_versions["releases"]

    - command: hdiutil attach -plist -nobrowse -readonly -quiet -mountpoint "/Volumes/{{ item }}" "/opt/browsers/firefox-releases/{{ item }}.dmg"
               creates="/opt/browsers/firefox/Firefox {{ item }}.app"
      with_items: firefox_versions["releases"]

    - command: cp -r "/Volumes/{{ item }}/Firefox.app" "/opt/browsers/firefox/Firefox {{ item }}.app"
               creates="/opt/browsers/firefox/Firefox {{ item }}.app"
      with_items: firefox_versions["releases"]

    - command: hdiutil detach /Volumes/{{ item }}
               removes=/Volumes/{{ item }}
      with_items: firefox_versions["releases"]


- hosts: win
  gather_facts: no
  vars_files:
    - firefox-versions.yaml
  tasks:
    - pip: name={{ item }} executable=/cygdrive/c/Python27/Scripts/pip.exe
      with_items:
        - mozmill
        - flask

    - file: state=directory dest={{ item }} mode=0777
      with_items:
        - /cygdrive/c/browsers/firefox
        - /cygdrive/c/browsers/firefox-releases
        - /cygdrive/c/browsers/work

    - name: Downloading releases
      get_url: url="https://ftp.mozilla.org/pub/mozilla.org/firefox/releases/{{ item }}/win32/de/Firefox%20Setup%20{{ item }}.exe"
               dest="/cygdrive/c/browsers/firefox-releases/{{ item }}.exe"
               validate_certs=no mode=0777
      with_items: firefox_versions["releases"]

    - name: Create .ini files for silent installation
      template: dest=/cygdrive/c/browsers/firefox-releases/{{ item }}.ini
                src=firefox-silent-win.ini mode=0777
      with_items: firefox_versions["releases"]

    - name: Create .bat files for silent installation
      lineinfile: dest=/cygdrive/c/browsers/firefox-releases/{{ item }}.bat
                  line="C:\browsers\firefox-releases\{{ item }}.exe /INI=C:\browsers\firefox-releases\{{ item }}.ini"
                  create=yes state=present mode=0777
      with_items: firefox_versions["releases"]

    - name: Silently install browsers
      command: /cygdrive/c/browsers/firefox-releases/{{ item }}.bat
               creates=/cygdrive/c/browsers/firefox/{{ item }}
      with_items: firefox_versions["releases"]

    - copy: src=mozmill-server.py
            dest="/cygdrive/c/Users/vagrant/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup"
            # dest="/cygdrive/c/ProgramData/Microsoft/Windows/Start Menu/Programs/Startup"
            # mode=0777

